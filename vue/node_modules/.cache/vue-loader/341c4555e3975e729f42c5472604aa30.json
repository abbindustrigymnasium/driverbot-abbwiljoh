{"remainingRequest":"C:\\Users\\s9wiljoh\\Desktop\\driverbot-abbwiljoh\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\s9wiljoh\\Desktop\\driverbot-abbwiljoh\\vue\\src\\components\\Buttons.vue?vue&type=style&index=0&id=2e0a4901&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\s9wiljoh\\Desktop\\driverbot-abbwiljoh\\vue\\src\\components\\Buttons.vue","mtime":1589973484763},{"path":"C:\\Users\\s9wiljoh\\Desktop\\driverbot-abbwiljoh\\vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\s9wiljoh\\Desktop\\driverbot-abbwiljoh\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\s9wiljoh\\Desktop\\driverbot-abbwiljoh\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\s9wiljoh\\Desktop\\driverbot-abbwiljoh\\vue\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\Users\\s9wiljoh\\Desktop\\driverbot-abbwiljoh\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\s9wiljoh\\Desktop\\driverbot-abbwiljoh\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.big {\r\n  font-size: 25px;\r\n}\r\n#Cooltext {\r\n  color: black;\r\n  text-decoration: underline;\r\n}\r\n#box {\r\n  width: 400px;\r\n  height: 400px;\r\n}\r\n#hide{\r\n display: none;\r\n}\r\n#logger {\r\n  position: fixed;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 300px;\r\n  height: 300px;\r\n  border: black dotted 2px;\r\n\r\n  word-wrap: break-word;\r\n}\r\n",{"version":3,"sources":["Buttons.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Buttons.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-container id=\"box\">\r\n   <span id=\"hide\"> {{Disconnect}}</span>\r\n    <v-card class=\"elevation-12\" color=\"grey lighten-1\">\r\n      <v-layout row>\r\n        <v-flex class=\"justify-center mb-6\">\r\n          <v-btn class=\"ma-2\" v-if=\"connected\" tile color=\"red\" icon @click=\"speed=850\">\r\n            85\r\n            <v-icon>directions_car</v-icon>\r\n          </v-btn>\r\n          <v-btn\r\n            class=\"ma-2\"\r\n            tile\r\n            large\r\n            color=\"teal\"\r\n            icon\r\n            :disabled=\"!connected\"\r\n            @click=\"Send('direction','f'+speed); SubscribeLog('direction');\"\r\n          >\r\n            <v-icon>keyboard_arrow_up</v-icon>\r\n          </v-btn>\r\n\r\n          <v-btn class=\"ma-2\" tile v-if=\"connected\" color=\"blue\" icon @click=\"speed=900\">\r\n            90\r\n            <v-icon>directions_car</v-icon>\r\n          </v-btn>\r\n        </v-flex>\r\n      </v-layout>\r\n      <v-layout row>\r\n        <v-flex md6>\r\n          <v-btn\r\n            class=\"ma-2\"\r\n            tile\r\n            large\r\n            color=\"teal\"\r\n            icon\r\n            :disabled=\"!connected\"\r\n            @click=\"Send('direction','l90'); SubscribeLog('direction');\"\r\n          >\r\n            <v-icon>keyboard_arrow_left</v-icon>\r\n          </v-btn>\r\n        </v-flex>\r\n\r\n        <v-flex md6>\r\n          <v-btn v-if=\"!connected\" class=\"ma-2\" tile large :color=\"car\" icon @click=\"Connect()\">\r\n            <v-icon>directions_car</v-icon>\r\n          </v-btn>\r\n          <v-btn v-else class=\"ma-2\" tile large :color=\"car\" icon @click=\"Send('direction','f0'); SubscribeLog('direction');\">\r\n            <v-icon>pause</v-icon>\r\n          </v-btn>\r\n        </v-flex>\r\n        <v-flex md6>\r\n          <v-btn\r\n            class=\"ma-2\"\r\n            tile\r\n            large\r\n            color=\"teal\"\r\n            icon\r\n            :disabled=\"!connected\"\r\n            @click=\"Send('direction','r90'); SubscribeLog('direction');\"\r\n          >\r\n            <v-icon>keyboard_arrow_right</v-icon>\r\n          </v-btn>\r\n        </v-flex>\r\n      </v-layout>\r\n      <v-layout row>\r\n        <v-flex class=\"justify-center mb-6\">\r\n          <v-btn class=\"ma-2\" v-if=\"connected\" tile color=\"green\" icon @click=\"speed=950\">\r\n            95\r\n            <v-icon>directions_car</v-icon>\r\n          </v-btn>\r\n          <v-btn\r\n            class=\"ma-2\"\r\n            tile\r\n            large\r\n            color=\"teal\"\r\n            icon\r\n            :disabled=\"!connected\"\r\n            @click=\"Send('direction','b'+speed); SubscribeLog('direction');\"\r\n          >\r\n            <v-icon>keyboard_arrow_down</v-icon>\r\n          </v-btn>\r\n\r\n          <v-btn class=\"ma-2\" tile v-if=\"connected\" color=\"purple\" icon @click=\"speed=1000\">\r\n            99\r\n            <v-icon>directions_car</v-icon>\r\n          </v-btn>\r\n        </v-flex>\r\n      </v-layout>\r\n    </v-card>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n//Bibliotek som ska användas\r\nvar mqtt = require(\"mqtt\");\r\nexport default {\r\n  name: \"Buttons\",\r\n  props: {\r\n    //Data som skickas in i komponenten\r\n  },\r\n  data() {\r\n    //All data som ska finnas i komponenten\r\n    return {\r\n      connected: false,\r\n      car: \"green\",\r\n      clientId: \"notyetAssigned\",\r\n      client: null,\r\n      speed: 600,\r\n      ticklabels: [\"Långsamt\", \"Snabbare\", \"Snabbast\"],\r\n      options: {}\r\n    };\r\n  },\r\n  computed: {\r\n    Disconnect() {\r\n      if (this.$store.getters.connected == false) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n  },\r\n  watch: {\r\n    //Om du vill logga någonting när det förändras i htmldelen. se exempel nedan\r\n    Disconnect: {\r\n      handler: function(newVal) {\r\n        if (newVal == true) {\r\n          this.connected = false;\r\n          this.client = mqtt.disconnect;\r\n          this.car = \"green\";\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    //Metoder\r\n    Connect() {\r\n      //https://github.com/mqttjs/MQTT.js/blob/master/README.md\r\n      var ref = this;\r\n      if (this.connected == true) {\r\n        return \"\";\r\n      }\r\n      let User = this.$store.getters.GetUser;\r\n      this.clientId =\r\n        \"WilliamBilKontroll\" +\r\n        Math.random()\r\n          .toString(16)\r\n          .substr(2, 8);\r\n      var mqtt_url = User.adress;\r\n      var url = \"mqtt://\" + mqtt_url;\r\n      var options = {\r\n        port: User.port,\r\n        clientId: this.clientId,\r\n        username: User.name,\r\n        password: User.password\r\n      };\r\n      this.options = options;\r\n      // console.log(\"connecting\");\r\n      this.client = mqtt.connect(url, options);\r\n      // console.log(\"connected?\");\r\n\r\n      this.client\r\n        .on(\"connect\", function() {\r\n          // console.log(\"success\");\r\n          ref.Connecting(true);\r\n        })\r\n        .on(\"error\", function() {\r\n          // console.log(\"error\");\r\n          ref.Connecting(false);\r\n        })\r\n        .on(\"close\", function() {\r\n          ref.Connecting(false);\r\n          // console.log(\"closing\");\r\n        });\r\n    },\r\n\r\n    Connecting(connected) {\r\n      this.connected = connected;\r\n      this.$store.dispatch(\"Connect\", connected);\r\n      // console.log(this.connected)\r\n      if (connected == false) {\r\n        this.car = \"red\";\r\n      } else {\r\n        this.car = \"blue\";\r\n        this.Send(\"direction\", this.clientId + \" har anslutits.\");\r\n      }\r\n    },\r\n\r\n    Send(adress, message) {\r\n      // console.log(message);\r\n      this.client.publish(\r\n        this.options.username + \"/\" + adress,\r\n        message\r\n      );\r\n\r\n      // this.$store.dispatch(\"addToLogger\", message);\r\n    },\r\n    SubscribeLog(adress) {\r\n      this.client.subscribe(this.options.username+'/'+adress, {qos: 1})\r\n      this.client.on('message', (topic, message)=> {\r\n        this.$store.dispatch(\"addToLogger\", message)\r\n      })\r\n      }\r\n  }\r\n};\r\n</script>\r\n\r\n<!-- CSS -->\r\n<style scoped>\r\n.big {\r\n  font-size: 25px;\r\n}\r\n#Cooltext {\r\n  color: black;\r\n  text-decoration: underline;\r\n}\r\n#box {\r\n  width: 400px;\r\n  height: 400px;\r\n}\r\n#hide{\r\n display: none;\r\n}\r\n#logger {\r\n  position: fixed;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 300px;\r\n  height: 300px;\r\n  border: black dotted 2px;\r\n\r\n  word-wrap: break-word;\r\n}\r\n</style>\r\n"]}]}